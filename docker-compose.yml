networks:
  steen:
    driver: bridge

volumes:
  mariadb_data:
  caddy_data:
  caddy_config:


services:
  mariadb:
    image: mariadb:11.4.2
    env_file:
      - .env # ← DB_ROOT_PASSWORD, DB_APP_USER, DB_APP_PASSWORD, MARIADB_DATABASE
    command: [ "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci" ]
    volumes:
      - ./database/init:/docker-entrypoint-initdb.d:ro
      - mariadb_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD-SHELL", "mariadb-admin ping -uroot -p$$MARIADB_ROOT_PASSWORD --silent" ]
      interval: 10s
      timeout: 5s
      start_period: 60s
      retries: 20
    restart: unless-stopped
    ports:
      - "3306:3306"
    networks:
      - steen
    labels:
      - com.centurylinklabs.watchtower.enable=false

  backend:
    image: ghcr.io/lsteen89/steenbudget-backend:latest
    env_file:
      - .env # contains JwtSettings__SecretKey, DatabaseSettings__ConnectionString, WEBSOCKET_SECRET, RECAPTCHA_SECRET_KEY
    depends_on:
      mariadb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - steen
    pull_policy: always # ← always pull the latest image
    labels:
      - com.centurylinklabs.watchtower.enable=false

  caddy:
    image: ghcr.io/lsteen89/caddy-cloudflare:2.9.1
    pull_policy: missing # ← don’t pull if already present
    env_file:
      - .env # includes CLOUDFLARE_API_TOKEN
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/steenbudget/Caddyfile:/etc/caddy:ro
      - /opt/steenbudget/frontend:/srv:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks: [ steen ]
    labels:
      - com.centurylinklabs.watchtower.enable=false # ← disable watchtower for Caddy

  watchtower:
    image: containrrr/watchtower
    command: --schedule "0 4 * * *" --cleanup --label-enable
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - steen
