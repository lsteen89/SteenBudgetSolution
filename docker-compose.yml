networks:
  steen:
    driver: bridge

volumes:
  mariadb_data:
  caddy_data:
  caddy_config:
  redis_data:
  dataprotection_keys:


services:
  redis:
    image: redis:7-alpine
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}", "--appendonly", "yes", "--appendfsync", "everysec", "--maxmemory", "256mb", "--maxmemory-policy", "allkeys-lru", "--tcp-keepalive", "60" ]
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli -a $$REDIS_PASSWORD ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      start_period: 15s
      retries: 10
    restart: unless-stopped
    networks: [ steen ]

  mariadb:
    image: mariadb:11.4.2
    env_file: [ .env ] # MARIADB_* vars
    command: [ "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci" ]
    volumes:
      - ./database/init:/docker-entrypoint-initdb.d:ro
      - mariadb_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD-SHELL", "mariadb-admin ping -uroot -p$$MARIADB_ROOT_PASSWORD --silent" ]
      interval: 10s
      timeout: 5s
      start_period: 60s
      retries: 20
    restart: unless-stopped
    ports:
      - "192.168.50.61:3306:3306" # LAN-only bind
    networks: [ steen ]
    labels:
      - com.centurylinklabs.watchtower.enable=false

  backend:
    image: ghcr.io/lsteen89/steenbudget-backend:latest
    pull_policy: always
    env_file: [ .env ] # existing vars
    user: "1000:1000"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      # Redis
      Redis__ConnectionString: "redis:6379,password=${REDIS_PASSWORD}"
      Redis__InstanceName: "eBudget:"
      # JWT (kid-based; values come from .env below)
      Jwt__Issuer: "eBudget"
      Jwt__Audience: "eBudget"
      Jwt__ExpiryMinutes: "15"
      Jwt__ActiveKid: "2025-09-11"
      Jwt__RefreshTokenExpiryDays: "30"
      Jwt__RefreshTokenExpiryDaysAbsolute: "90"
      Jwt__Keys__2025-09-11: "${JWT_KEYS__2025_09_11_B64}"
      Jwt__Keys__2025-12-01: "${JWT_KEYS__2025_12_01_B64}"
      # WebSocket secret
      WebSocket__Secret: "${WEBSOCKET_SECRET}"
    volumes:
      - dataprotection_keys:/home/app/.aspnet/DataProtection-Keys
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks: [ steen ]
    labels:
      - com.centurylinklabs.watchtower.enable=false

  caddy:
    image: ghcr.io/lsteen89/caddy-cloudflare:2.9.1
    pull_policy: missing
    env_file: [ .env ] # CLOUDFLARE_API_TOKEN etc.
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # If /opt/steenbudget/Caddyfile is a single file, map it explicitly:
      - /opt/steenbudget/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - /opt/steenbudget/frontend:/srv:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks: [ steen ]
    labels:
      - com.centurylinklabs.watchtower.enable=false

  watchtower:
    image: containrrr/watchtower
    command: --schedule "0 4 * * *" --cleanup --label-enable
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks: [ steen ]
